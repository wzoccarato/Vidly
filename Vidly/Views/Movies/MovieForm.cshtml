@model Vidly.ViewModels.MovieFormViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit Movie</h2>

@using (Html.BeginForm("Save", "Movies"))
{
    // questa ritorna a tutti gli effetti una classe Movie, perche' tutti i compi riportati
    // Qui sotto sono a tutti gli effetti uno scaffolding della classe Movie
<div class="form-group">
    @Html.LabelFor(m => m.Name)
    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.Name)
</div>
<div>
    @Html.LabelFor(m => m.ReleaseDate)
    @Html.TextBoxFor(m => m.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
    @Html.ValidationMessageFor(m => m.ReleaseDate)
</div>
    <div class="form-group">
        @Html.LabelFor(m => m.GenreId)
        @* TODO il valore visualizzato di default deve essere quello gia' presente nel movie *@
        @Html.DropDownListFor(m => m.GenreId, new SelectList(Model.Genres, "Id", "Name"), new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.GenreId)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NumberInStock)
        @* TODO questa textbox deve accettare soltanto interi. vedere come si fa *@
        @Html.TextBoxFor(m => m.NumberInStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NumberInStock)
    </div>
    
    @Html.HiddenFor(m => m.Id)
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>
}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}
